{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maany\\\\OneDrive\\\\Desktop\\\\myBlog\\\\my-blog\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/home.css\";\nimport PostMasonry from \"../components/post-masonry\";\n// import trending from \"../assets/mocks/trending\";\n// import featured from \"../assets/mocks/featured\";\nimport MasonryPost from \"../components/masonry-post\";\nimport PostGrid from \"../components/post-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trendingConfig = {\n  1: {\n    gridArea: \"1/2/3/3\"\n  }\n};\nconst featuredConfig = {\n  0: {\n    gridArea: \"1/1/2/3\",\n    height: \"300px\",\n    width: \"100%\"\n  },\n  1: {\n    height: \"300px\",\n    width: \"100%\"\n  },\n  3: {\n    height: \"630px\",\n    marginLeft: \"30px\",\n    width: \"630px\"\n  }\n};\n\n// const mergeStyles = function (posts, config) {\n//   posts.forEach((post, index) => {\n//     post.style = config[index];\n//   });\n// };\n\nfunction Home() {\n  _s();\n  const [current, setCurrent] = useState(1);\n  const recentPostsRef = useRef(null);\n  const [paginationChanged, setPaginationChanged] = useState(false);\n  const [posts, setPosts] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/post\");\n        const posts = await response.json();\n        console.log(posts);\n        setPosts(posts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  // console.log(posts.length);\n  const trending = posts.trending;\n  const featured = posts.featured;\n  mergeStyles(trending, trendingConfig);\n  mergeStyles(featured, featuredConfig);\n  const recentPosts = [...trending, ...featured, ...featured];\n  const lastPost = featured.pop();\n  // console.log(featured);\n\n  useEffect(() => {\n    if (paginationChanged) {\n      recentPostsRef === null || recentPostsRef === void 0 ? void 0 : recentPostsRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      setPaginationChanged(false);\n    }\n  }, [paginationChanged]);\n  if (posts.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Featured Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"featured-posts-container\",\n            children: [/*#__PURE__*/_jsxDEV(PostMasonry, {\n              posts: featured,\n              columns: 2,\n              tagsOnTop: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MasonryPost, {\n              post: lastPost,\n              tagsOnTop: true,\n              styles: {\n                marginTop: \"40px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              ref: recentPostsRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Recent Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n                posts: recentPosts,\n                current: current,\n                setCurrent: setCurrent,\n                setPaginationChanged: setPaginationChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Trending Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PostMasonry, {\n            posts: trending,\n            columns: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  }\n}\n_s(Home, \"I/uZGSxfmwQ4mLu5XLGNzwtzvBA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PostMasonry","MasonryPost","PostGrid","jsxDEV","_jsxDEV","trendingConfig","gridArea","featuredConfig","height","width","marginLeft","Home","_s","current","setCurrent","recentPostsRef","paginationChanged","setPaginationChanged","posts","setPosts","fetchData","response","fetch","json","console","log","error","trending","featured","mergeStyles","recentPosts","lastPost","pop","scrollIntoView","behavior","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","tagsOnTop","post","styles","marginTop","ref","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/pages/home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/home.css\";\r\nimport PostMasonry from \"../components/post-masonry\";\r\n// import trending from \"../assets/mocks/trending\";\r\n// import featured from \"../assets/mocks/featured\";\r\nimport MasonryPost from \"../components/masonry-post\";\r\nimport PostGrid from \"../components/post-grid\";\r\n\r\nconst trendingConfig = {\r\n  1: {\r\n    gridArea: \"1/2/3/3\",\r\n  },\r\n};\r\n\r\nconst featuredConfig = {\r\n  0: {\r\n    gridArea: \"1/1/2/3\",\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  1: {\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  3: {\r\n    height: \"630px\",\r\n    marginLeft: \"30px\",\r\n    width: \"630px\",\r\n  },\r\n};\r\n\r\n// const mergeStyles = function (posts, config) {\r\n//   posts.forEach((post, index) => {\r\n//     post.style = config[index];\r\n//   });\r\n// };\r\n\r\nfunction Home() {\r\n  const [current, setCurrent] = useState(1);\r\n  const recentPostsRef = useRef(null);\r\n  const [paginationChanged, setPaginationChanged] = useState(false);\r\n  const [posts, setPosts] = useState({});\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/post\");\r\n      const posts = await response.json();\r\n      console.log(posts);\r\n      setPosts(posts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\n// console.log(posts.length);\r\n  const trending =  posts.trending;\r\n  const featured = posts.featured;\r\n \r\n  mergeStyles(trending, trendingConfig);\r\n  mergeStyles(featured, featuredConfig);\r\n\r\nconst recentPosts = [...trending, ...featured, ...featured];\r\nconst lastPost = featured.pop();\r\n  // console.log(featured);\r\n \r\n  useEffect(() => {\r\n    if (paginationChanged) {\r\n      recentPostsRef?.current.scrollIntoView({ behavior: \"smooth\" });\r\n      setPaginationChanged(false);\r\n    }\r\n  }, [paginationChanged]);\r\n  if(posts.length>0){\r\n   return (\r\n    <main className=\"home\">\r\n      <section className=\"container\">\r\n        <div className=\"row\">\r\n          <h1>Featured Posts</h1>\r\n          <section className=\"featured-posts-container\">\r\n            <PostMasonry posts={featured} columns={2} tagsOnTop={true} />\r\n            <MasonryPost\r\n              post={lastPost}\r\n              tagsOnTop={true}\r\n              styles={{ marginTop: \"40px\" }}\r\n            />\r\n          </section>\r\n\r\n          <section className=\"container\">\r\n            <div className=\"row\" ref={recentPostsRef}>\r\n              <h1>Recent Posts</h1>\r\n              <PostGrid\r\n                posts={recentPosts}\r\n                current={current}\r\n                setCurrent={setCurrent}\r\n                setPaginationChanged={setPaginationChanged}\r\n              />\r\n            </div>\r\n          </section>\r\n          <h1>Trending Posts</h1>\r\n          <PostMasonry posts={trending} columns={3} />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}