{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maany\\\\OneDrive\\\\Desktop\\\\myBlog\\\\my-blog\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/home.css\";\nimport PostMasonry from \"../components/post-masonry\";\n// import trending from \"../assets/mocks/trending\";\n// import featured from \"../assets/mocks/featured\";\nimport MasonryPost from \"../components/masonry-post\";\nimport PostGrid from \"../components/post-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trendingConfig = {\n  1: {\n    gridArea: \"1/2/3/3\"\n  }\n};\nconst featuredConfig = {\n  0: {\n    gridArea: \"1/1/2/3\",\n    height: \"300px\",\n    width: \"100%\"\n  },\n  1: {\n    height: \"300px\",\n    width: \"100%\"\n  },\n  3: {\n    height: \"630px\",\n    marginLeft: \"30px\",\n    width: \"630px\"\n  }\n};\nconst mergeStyles = function (posts, config) {\n  posts.forEach((post, index) => {\n    post.style = config[index];\n  });\n};\nfunction Home() {\n  _s();\n  const [current, setCurrent] = useState(1);\n  const recentPostsRef = useRef(null);\n  const [paginationChanged, setPaginationChanged] = useState(false);\n  const [trending, setTrending] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/post\").then(async response => {\n      await response.json().then(posts => {\n        setTrending(posts.trending);\n        setFeatured(posts.featured);\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    if (paginationChanged) {\n      recentPostsRef === null || recentPostsRef === void 0 ? void 0 : recentPostsRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      return () => {\n        setPaginationChanged(false);\n      };\n    }\n  }, [paginationChanged]);\n  mergeStyles(trending, trendingConfig);\n  mergeStyles(featured, featuredConfig);\n  const recentPosts = [...trending, ...featured, ...featured];\n  console.log(recentPosts);\n  const lastPost = featured.pop();\n  if (trending.length > 0 && featured.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Featured Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"featured-posts-container\",\n            children: [/*#__PURE__*/_jsxDEV(PostMasonry, {\n              posts: featured,\n              columns: 2,\n              tagsOnTop: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MasonryPost, {\n              post: lastPost,\n              tagsOnTop: true,\n              styles: {\n                marginTop: \"40px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              ref: recentPostsRef,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Recent Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n                posts: recentPosts,\n                current: current,\n                setCurrent: setCurrent,\n                setPaginationChanged: setPaginationChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Trending Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PostMasonry, {\n            posts: trending,\n            columns: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Home, \"12mlu5KbHnktGRdTDae0VvvHyUs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PostMasonry","MasonryPost","PostGrid","jsxDEV","_jsxDEV","trendingConfig","gridArea","featuredConfig","height","width","marginLeft","mergeStyles","posts","config","forEach","post","index","style","Home","_s","current","setCurrent","recentPostsRef","paginationChanged","setPaginationChanged","trending","setTrending","featured","setFeatured","fetch","then","response","json","catch","err","console","log","scrollIntoView","behavior","recentPosts","lastPost","pop","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","tagsOnTop","styles","marginTop","ref","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/pages/home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/home.css\";\r\nimport PostMasonry from \"../components/post-masonry\";\r\n// import trending from \"../assets/mocks/trending\";\r\n// import featured from \"../assets/mocks/featured\";\r\nimport MasonryPost from \"../components/masonry-post\";\r\nimport PostGrid from \"../components/post-grid\";\r\n\r\nconst trendingConfig = {\r\n  1: {\r\n    gridArea: \"1/2/3/3\",\r\n  },\r\n};\r\n\r\nconst featuredConfig = {\r\n  0: {\r\n    gridArea: \"1/1/2/3\",\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  1: {\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  3: {\r\n    height: \"630px\",\r\n    marginLeft: \"30px\",\r\n    width: \"630px\",\r\n  },\r\n};\r\n\r\nconst mergeStyles = function (posts, config) {\r\n  posts.forEach((post, index) => {\r\n    post.style = config[index];\r\n  });\r\n};\r\n\r\nfunction Home() {\r\n  const [current, setCurrent] = useState(1);\r\n  const recentPostsRef = useRef(null);\r\n  const [paginationChanged, setPaginationChanged] = useState(false);\r\n  const [trending, setTrending] = useState([]);\r\n  const [featured, setFeatured] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/post\")\r\n      .then(async (response) => {\r\n        await response.json().then((posts) => {\r\n          setTrending(posts.trending);\r\n          setFeatured(posts.featured);\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (paginationChanged) {\r\n      recentPostsRef?.current.scrollIntoView({ behavior: \"smooth\" });\r\n      return () => {\r\n        setPaginationChanged(false);\r\n      };\r\n    }\r\n  }, [paginationChanged]);\r\n\r\n  mergeStyles(trending, trendingConfig);\r\n  mergeStyles(featured, featuredConfig);\r\n\r\n  const recentPosts = [...trending, ...featured, ...featured];\r\n  console.log(recentPosts);\r\n  const lastPost = featured.pop();\r\n\r\n\r\n  if (trending.length > 0 && featured.length > 0) {\r\n    return (\r\n      <main className=\"home\">\r\n        <section className=\"container\">\r\n          <div className=\"row\">\r\n            <h1>Featured Posts</h1>\r\n            <section className=\"featured-posts-container\">\r\n              <PostMasonry posts={featured} columns={2} tagsOnTop={true} />\r\n              <MasonryPost\r\n                post={lastPost}\r\n                tagsOnTop={true}\r\n                styles={{ marginTop: \"40px\" }}\r\n              />\r\n            </section>\r\n\r\n            <section className=\"container\">\r\n              <div className=\"row\" ref={recentPostsRef}>\r\n                <h1>Recent Posts</h1>\r\n                <PostGrid\r\n                  posts={recentPosts}\r\n                  current={current}\r\n                  setCurrent={setCurrent}\r\n                  setPaginationChanged={setPaginationChanged}\r\n                />\r\n              </div>\r\n            </section>\r\n            <h1>Trending Posts</h1>\r\n            <PostMasonry posts={trending} columns={3} />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}