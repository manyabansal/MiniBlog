{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maany\\\\OneDrive\\\\Desktop\\\\myBlog\\\\my-blog\\\\src\\\\components\\\\masonry-post.js\";\nimport React from \"react\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/masonry-post.css\";\nimport categoryColors from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MasonryPost(_ref) {\n  let {\n    post,\n    tagsOnTop\n  } = _ref;\n  const imageBackground = {\n    backgroundImage: `url(\"${require(`../assets/images/${post.image}`)}\")`\n  };\n  const style = {\n    ...imageBackground,\n    ...post.style\n  };\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    className: \"masonry-post overlay\",\n    style: style,\n    href: post.link,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags-container\",\n        children: post.categories.map((tag, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            style: {\n              backgroundColor: categoryColors[tag]\n            },\n            children: tag.toUpperCase()\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"image-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-date\",\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = MasonryPost;\nvar _c;\n$RefreshReg$(_c, \"MasonryPost\");","map":{"version":3,"names":["React","categoryColors","jsxDEV","_jsxDEV","MasonryPost","_ref","post","tagsOnTop","imageBackground","backgroundImage","require","image","style","className","href","link","children","categories","map","tag","index","backgroundColor","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","title","date","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/components/masonry-post.js"],"sourcesContent":["import React from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/masonry-post.css\";\r\nimport categoryColors from \"./styles.js\";\r\n\r\nexport default function MasonryPost({ post, tagsOnTop }) {\r\n  const imageBackground = {\r\n    backgroundImage: `url(\"${require(`../assets/images/${post.image}`)}\")`,\r\n  };\r\n\r\n  const style = { ...imageBackground, ...post.style };\r\n  return (\r\n    <a className=\"masonry-post overlay\" style={style} href={post.link}>\r\n      <div className=\"image-text\">\r\n        <div className=\"tags-container\">\r\n          {post.categories.map((tag, index) => {\r\n            return (\r\n              <span\r\n                key={index}\r\n                className=\"tag\"\r\n                style={{ backgroundColor: categoryColors[tag] }}\r\n              >\r\n                {tag.toUpperCase()}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <h2 className=\"image-title\">{post.title}</h2>\r\n          <span className=\"image-date\">{post.date}</span>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,wBAAwB;AAC/B,OAAOC,cAAc,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACrD,MAAMG,eAAe,GAAG;IACtBC,eAAe,EAAG,QAAOC,OAAO,CAAE,oBAAmBJ,IAAI,CAACK,KAAM,EAAC,CAAE;EACrE,CAAC;EAED,MAAMC,KAAK,GAAG;IAAE,GAAGJ,eAAe;IAAE,GAAGF,IAAI,CAACM;EAAM,CAAC;EACnD,oBACET,OAAA;IAAGU,SAAS,EAAC,sBAAsB;IAACD,KAAK,EAAEA,KAAM;IAACE,IAAI,EAAER,IAAI,CAACS,IAAK;IAAAC,QAAA,eAChEb,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAG,QAAA,gBACzBb,OAAA;QAAKU,SAAS,EAAC,gBAAgB;QAAAG,QAAA,EAC5BV,IAAI,CAACW,UAAU,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;UACnC,oBACEjB,OAAA;YAEEU,SAAS,EAAC,KAAK;YACfD,KAAK,EAAE;cAAES,eAAe,EAAEpB,cAAc,CAACkB,GAAG;YAAE,CAAE;YAAAH,QAAA,EAE/CG,GAAG,CAACG,WAAW,CAAC;UAAC,GAJbF,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKN,CAAC;QAEX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAIU,SAAS,EAAC,aAAa;UAAAG,QAAA,EAAEV,IAAI,CAACqB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7CvB,OAAA;UAAMU,SAAS,EAAC,YAAY;UAAAG,QAAA,EAAEV,IAAI,CAACsB;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER;AAACG,EAAA,GA7BuBzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}