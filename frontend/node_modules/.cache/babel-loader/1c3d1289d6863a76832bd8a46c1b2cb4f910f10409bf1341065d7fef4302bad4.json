{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/home.css\";\nimport PostMasonry from \"../components/post-masonry\";\n// import trending from \"../assets/mocks/trending\";\n// import featured from \"../assets/mocks/featured\";\nimport MasonryPost from \"../components/masonry-post\";\nimport PostGrid from \"../components/post-grid\";\nconst trendingConfig = {\n  1: {\n    gridArea: \"1/2/3/3\"\n  }\n};\nconst featuredConfig = {\n  0: {\n    gridArea: \"1/1/2/3\",\n    height: \"300px\",\n    width: \"100%\"\n  },\n  1: {\n    height: \"300px\",\n    width: \"100%\"\n  },\n  3: {\n    height: \"630px\",\n    marginLeft: \"30px\",\n    width: \"630px\"\n  }\n};\nconst mergeStyles = function (posts, config) {\n  posts.forEach((post, index) => {\n    post.style = config[index];\n  });\n};\nfunction Home() {\n  _s();\n  const [current, setCurrent] = useState(1);\n  const recentPostsRef = useRef(null);\n  const [paginationChanged, setPaginationChanged] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [trending, setTrending] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/post\").then(async response => {\n      await response.json().then(posts => {\n        setPosts(posts);\n        setTrending(posts.trending);\n        setFeatured(posts.featured);\n        console.log(trending);\n      });\n    }).catch(err => console.log(err));\n  }, []);\n\n  // useEffect(() => {\n  //   if (posts) {\n  //     const trending = posts.trending;\n  //     console.log(trending)\n  //     const featured = posts.featured;\n  //     mergeStyles(trending, trendingConfig);\n  //     // mergeStyles(featured, featuredConfig);\n  //     // const recentPosts = [...trending, ...featured, ...featured];\n  //     // const lastPost = featured.pop();\n  //     // console.log(recentPosts);\n  //   }\n  // }, [posts]);\n  // console.log(posts.length);\n  // console.log(posts);\n\n  // const trending =  posts.trending;\n  // const featured = posts.featured;\n  //  console.log(trending);\n\n  // mergeStyles(trending, trendingConfig);\n  // mergeStyles(featured, featuredConfig);\n\n  // const recentPosts = [...trending, ...featured, ...featured];\n  // console.log(recentPosts)\n  // const lastPost = featured.pop();\n  // console.log(featured);\n\n  //   useEffect(() => {\n  //     if (paginationChanged) {\n  //       recentPostsRef?.current.scrollIntoView({ behavior: \"smooth\" });\n  //       setPaginationChanged(false);\n  //     }\n  //   }, [paginationChanged]);\n  //   if(posts.length>0){\n  //  return (\n  // <main className=\"home\">\n  //   <section className=\"container\">\n  //     <div className=\"row\">\n  //       <h1>Featured Posts</h1>\n  //       <section className=\"featured-posts-container\">\n  //         <PostMasonry posts={featured} columns={2} tagsOnTop={true} />\n  //         <MasonryPost\n  //           post={lastPost}\n  //           tagsOnTop={true}\n  //           styles={{ marginTop: \"40px\" }}\n  //         />\n  //       </section>\n\n  //       <section className=\"container\">\n  //         <div className=\"row\" ref={recentPostsRef}>\n  //           <h1>Recent Posts</h1>\n  //           <PostGrid\n  //             posts={recentPosts}\n  //             current={current}\n  //             setCurrent={setCurrent}\n  //             setPaginationChanged={setPaginationChanged}\n  //           />\n  //         </div>\n  //       </section>\n  //       <h1>Trending Posts</h1>\n  //       <PostMasonry posts={trending} columns={3} />\n  //     </div>\n  //   </section>\n  // </main>\n  // );\n  // }\n}\n_s(Home, \"V64yEnMlJpfk8soGGDLlFBm3XMk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PostMasonry","MasonryPost","PostGrid","trendingConfig","gridArea","featuredConfig","height","width","marginLeft","mergeStyles","posts","config","forEach","post","index","style","Home","_s","current","setCurrent","recentPostsRef","paginationChanged","setPaginationChanged","setPosts","trending","setTrending","featured","setFeatured","fetch","then","response","json","console","log","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/pages/home.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/home.css\";\r\nimport PostMasonry from \"../components/post-masonry\";\r\n// import trending from \"../assets/mocks/trending\";\r\n// import featured from \"../assets/mocks/featured\";\r\nimport MasonryPost from \"../components/masonry-post\";\r\nimport PostGrid from \"../components/post-grid\";\r\n\r\nconst trendingConfig = {\r\n  1: {\r\n    gridArea: \"1/2/3/3\",\r\n  },\r\n};\r\n\r\nconst featuredConfig = {\r\n  0: {\r\n    gridArea: \"1/1/2/3\",\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  1: {\r\n    height: \"300px\",\r\n    width: \"100%\",\r\n  },\r\n  3: {\r\n    height: \"630px\",\r\n    marginLeft: \"30px\",\r\n    width: \"630px\",\r\n  },\r\n};\r\n\r\nconst mergeStyles = function (posts, config) {\r\n  posts.forEach((post, index) => {\r\n    post.style = config[index];\r\n  });\r\n};\r\n\r\nfunction Home() {\r\n  const [current, setCurrent] = useState(1);\r\n  const recentPostsRef = useRef(null);\r\n  const [paginationChanged, setPaginationChanged] = useState(false);\r\n  const [posts, setPosts] = useState({});\r\n  const [trending, setTrending] = useState([]);\r\n  const [featured, setFeatured] = useState([]);\r\nuseEffect(() => {\r\n\r\n       fetch(\"http://127.0.0.1:8000/post\")\r\n      .then(async (response) => {\r\n        await response.json().then((posts) => {\r\n           setPosts(posts);\r\n           setTrending(posts.trending);\r\n           setFeatured(posts.featured);\r\n           console.log(trending);\r\n        });\r\n      }).catch(err=> console.log(err));\r\n  \r\n}, []);\r\n\r\n// useEffect(() => {\r\n//   if (posts) {\r\n//     const trending = posts.trending;\r\n//     console.log(trending)\r\n//     const featured = posts.featured;\r\n//     mergeStyles(trending, trendingConfig);\r\n//     // mergeStyles(featured, featuredConfig);\r\n//     // const recentPosts = [...trending, ...featured, ...featured];\r\n//     // const lastPost = featured.pop();\r\n//     // console.log(recentPosts);\r\n//   }\r\n// }, [posts]);\r\n// console.log(posts.length);\r\n// console.log(posts);\r\n\r\n  // const trending =  posts.trending;\r\n  // const featured = posts.featured;\r\n//  console.log(trending);\r\n\r\n  // mergeStyles(trending, trendingConfig);\r\n  // mergeStyles(featured, featuredConfig);\r\n\r\n \r\n\r\n// const recentPosts = [...trending, ...featured, ...featured];\r\n// console.log(recentPosts)\r\n// const lastPost = featured.pop();\r\n  // console.log(featured);\r\n \r\n//   useEffect(() => {\r\n//     if (paginationChanged) {\r\n//       recentPostsRef?.current.scrollIntoView({ behavior: \"smooth\" });\r\n//       setPaginationChanged(false);\r\n//     }\r\n//   }, [paginationChanged]);\r\n//   if(posts.length>0){\r\n  //  return (\r\n    // <main className=\"home\">\r\n    //   <section className=\"container\">\r\n    //     <div className=\"row\">\r\n    //       <h1>Featured Posts</h1>\r\n    //       <section className=\"featured-posts-container\">\r\n    //         <PostMasonry posts={featured} columns={2} tagsOnTop={true} />\r\n    //         <MasonryPost\r\n    //           post={lastPost}\r\n    //           tagsOnTop={true}\r\n    //           styles={{ marginTop: \"40px\" }}\r\n    //         />\r\n    //       </section>\r\n\r\n    //       <section className=\"container\">\r\n    //         <div className=\"row\" ref={recentPostsRef}>\r\n    //           <h1>Recent Posts</h1>\r\n    //           <PostGrid\r\n    //             posts={recentPosts}\r\n    //             current={current}\r\n    //             setCurrent={setCurrent}\r\n    //             setPaginationChanged={setPaginationChanged}\r\n    //           />\r\n    //         </div>\r\n    //       </section>\r\n    //       <h1>Trending Posts</h1>\r\n    //       <PostMasonry posts={trending} columns={3} />\r\n    //     </div>\r\n    //   </section>\r\n    // </main>\r\n  // );\r\n  // }\r\n  \r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,kCAAkC;AACzC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,4BAA4B;AACpD;AACA;AACA,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAE;IACDC,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAE;IACDD,QAAQ,EAAE,SAAS;IACnBE,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE;EACT,CAAC;EACD,CAAC,EAAE;IACDD,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE;EACT,CAAC;EACD,CAAC,EAAE;IACDD,MAAM,EAAE,OAAO;IACfE,UAAU,EAAE,MAAM;IAClBD,KAAK,EAAE;EACT;AACF,CAAC;AAED,MAAME,WAAW,GAAG,SAAAA,CAAUC,KAAK,EAAEC,MAAM,EAAE;EAC3CD,KAAK,CAACE,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC7BD,IAAI,CAACE,KAAK,GAAGJ,MAAM,CAACG,KAAK,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC;AAED,SAASE,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMuB,cAAc,GAAGtB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACuB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACa,KAAK,EAAEa,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9CE,SAAS,CAAC,MAAM;IAET6B,KAAK,CAAC,4BAA4B,CAAC,CACnCC,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEnB,KAAK,IAAK;QACnCa,QAAQ,CAACb,KAAK,CAAC;QACfe,WAAW,CAACf,KAAK,CAACc,QAAQ,CAAC;QAC3BG,WAAW,CAACjB,KAAK,CAACgB,QAAQ,CAAC;QAC3BM,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CAACU,KAAK,CAACC,GAAG,IAAGH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;EAEtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACA;EACF;;EAEE;EACA;;EAIF;EACA;EACA;EACE;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EACA;AAEF;AAAClB,EAAA,CA1FQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA4Fb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}