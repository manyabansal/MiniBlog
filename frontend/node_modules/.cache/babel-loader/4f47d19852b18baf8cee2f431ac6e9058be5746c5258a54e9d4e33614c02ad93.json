{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maany\\\\OneDrive\\\\Desktop\\\\myBlog\\\\my-blog\\\\src\\\\components\\\\masonry-post.js\";\nimport React from \"react\";\nimport TagRow from './tag-row';\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/masonry-post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MasonryPost(_ref) {\n  let {\n    post,\n    tagsOnTop,\n    styles\n  } = _ref;\n  console.log(post.image.slice(8));\n  const windowWidth = window.innerWidth;\n  const imageBackground = {\n    backgroundImage: `url(\"${require(`../../rest/uploads/${post.image.slice(8).replace(/\\\\/g, '/')}`)}\")`\n\n    // backgroundImage: post.image\n  };\n\n  const style = windowWidth > 900 ? {\n    ...imageBackground,\n    ...post.style\n  } : {\n    ...imageBackground,\n    ...styles\n  };\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    className: \"masonry-post overlay\",\n    style: style,\n    href: post.link,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-text\",\n      style: {\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TagRow, {\n        tags: post.categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"image-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-date\",\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = MasonryPost;\nvar _c;\n$RefreshReg$(_c, \"MasonryPost\");","map":{"version":3,"names":["React","TagRow","jsxDEV","_jsxDEV","MasonryPost","_ref","post","tagsOnTop","styles","console","log","image","slice","windowWidth","window","innerWidth","imageBackground","backgroundImage","require","replace","style","className","href","link","children","justifyContent","tags","categories","fileName","_jsxFileName","lineNumber","columnNumber","title","date","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/components/masonry-post.js"],"sourcesContent":["import React from \"react\";\r\nimport TagRow from './tag-row'\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/masonry-post.css\";\r\n\r\n\r\nexport default function MasonryPost({ post, tagsOnTop, styles }) {\r\n  console.log(post.image.slice(8));\r\n  const windowWidth = window.innerWidth;\r\n  const imageBackground = {\r\n  backgroundImage: `url(\"${require(`../../rest/uploads/${post.image.slice(8).replace(/\\\\/g, '/')}`)}\")`,\r\n\r\n    // backgroundImage: post.image\r\n  };\r\n\r\n  const style =\r\n    windowWidth > 900\r\n      ? { ...imageBackground, ...post.style }\r\n      : { ...imageBackground, ...styles };\r\n  return (\r\n    <a className=\"masonry-post overlay\" style={style} href={post.link}>\r\n      <div className=\"image-text\" style={{ justifyContent: \"space-between\" }}>\r\n       <TagRow tags={post.categories}/>\r\n        <div>\r\n          <h2 className=\"image-title\">{post.title}</h2>\r\n          <span className=\"image-date\">{post.date}</span>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B;AACA,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA8B;EAAA,IAA7B;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC7DI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;EACrC,MAAMC,eAAe,GAAG;IACxBC,eAAe,EAAG,QAAOC,OAAO,CAAE,sBAAqBZ,IAAI,CAACK,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC,KAAK,EAAE,GAAG,CAAE,EAAC,CAAE;;IAEhG;EACF,CAAC;;EAED,MAAMC,KAAK,GACTP,WAAW,GAAG,GAAG,GACb;IAAE,GAAGG,eAAe;IAAE,GAAGV,IAAI,CAACc;EAAM,CAAC,GACrC;IAAE,GAAGJ,eAAe;IAAE,GAAGR;EAAO,CAAC;EACvC,oBACEL,OAAA;IAAGkB,SAAS,EAAC,sBAAsB;IAACD,KAAK,EAAEA,KAAM;IAACE,IAAI,EAAEhB,IAAI,CAACiB,IAAK;IAAAC,QAAA,eAChErB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAACD,KAAK,EAAE;QAAEK,cAAc,EAAE;MAAgB,CAAE;MAAAD,QAAA,gBACtErB,OAAA,CAACF,MAAM;QAACyB,IAAI,EAAEpB,IAAI,CAACqB;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/B5B,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAIkB,SAAS,EAAC,aAAa;UAAAG,QAAA,EAAElB,IAAI,CAAC0B;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7C5B,OAAA;UAAMkB,SAAS,EAAC,YAAY;UAAAG,QAAA,EAAElB,IAAI,CAAC2B;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGR;AAACG,EAAA,GAzBuB9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}