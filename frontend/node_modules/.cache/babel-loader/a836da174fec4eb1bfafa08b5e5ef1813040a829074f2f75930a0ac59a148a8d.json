{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maany\\\\OneDrive\\\\Desktop\\\\myBlog\\\\my-blog\\\\src\\\\components\\\\user-post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/user-post.css\";\nimport { Navigate } from \"react-router\";\nimport $ from \"dotdotdot-js\"; // Import dotdotdot.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPost(_ref) {\n  _s();\n  let {\n    post,\n    isFirst\n  } = _ref;\n  const postTextRef = useRef(null);\n  const postPageRender = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/post/${post._id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  };\n  useEffect(() => {\n    // Initialize dotdotdot on the post text element\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      let wrapper = document.querySelector(postTextRef.current);\n      let options = {\n        callback: function (isTruncated) {},\n        ellipsis: \"\\u2026 \",\n        height: 340,\n        wrap: \"word\",\n        tolerance: 0,\n        truncate: \"word\",\n        watch: \"window\"\n      };\n      new Dotdotdot(wrapper, options);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: postPageRender,\n      className: `post-image ${isFirst && \"first-post\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${require(`../../rest/uploads/${post.image.slice(8)}`)}`,\n        alt: \"Post Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `post-text ${isFirst && \"first-post\"}`,\n      ref: postTextRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: postPageRender,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.author.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPost, \"GIHNc99c4giJ6uloxvHY07jLJE0=\");\n_c = UserPost;\nvar _c;\n$RefreshReg$(_c, \"UserPost\");","map":{"version":3,"names":["React","useEffect","useRef","Navigate","$","jsxDEV","_jsxDEV","UserPost","_ref","_s","post","isFirst","postTextRef","postPageRender","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","document","addEventListener","wrapper","querySelector","current","options","callback","isTruncated","ellipsis","height","wrap","tolerance","truncate","watch","Dotdotdot","className","children","onClick","src","require","image","slice","alt","ref","title","author","username","date","summary","_c","$RefreshReg$"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/src/components/user-post.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/user-post.css\";\r\nimport { Navigate } from \"react-router\";\r\nimport $ from \"dotdotdot-js\"; // Import dotdotdot.js library\r\n\r\nexport default function UserPost({ post, isFirst }) {\r\n  const postTextRef = useRef(null);\r\n  const postPageRender = () => {\r\n    return <Navigate to={`/post/${post._id}`} />;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initialize dotdotdot on the post text element\r\n    document.addEventListener( \"DOMContentLoaded\", () => {\r\n      let wrapper = document.querySelector( postTextRef.current );\r\n      let options = {\r\n        callback: function( isTruncated ) {},\r\n        ellipsis: \"\\u2026 \",\r\n        height: 340,\r\n        wrap: \"word\",\r\n        tolerance: 0,\r\n        truncate: \"word\",\r\n        watch: \"window\",\r\n      };\r\n      new Dotdotdot( wrapper, options );\r\n   });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-container\">\r\n      <div\r\n        onClick={postPageRender}\r\n        className={`post-image ${isFirst && \"first-post\"}`}\r\n      >\r\n        <img\r\n          src={`${require(`../../rest/uploads/${post.image.slice(8)}`)}`}\r\n          alt=\"Post Image\"\r\n        />\r\n      </div>\r\n      <div className={`post-text ${isFirst && \"first-post\"}`} ref={postTextRef}>\r\n        <div>\r\n          <h2 onClick={postPageRender}>{post.title}</h2>\r\n          <span>{post.author.username}</span>\r\n          <span>{post.date}</span>\r\n        </div>\r\n        <p>{post.summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}