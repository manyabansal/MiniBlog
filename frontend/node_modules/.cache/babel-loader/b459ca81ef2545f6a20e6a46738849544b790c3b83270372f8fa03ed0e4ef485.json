{"ast":null,"code":"/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/\n//\n// FormData\n//\n// http://hacks.mozilla.org/2010/05/formdata-interface-coming-to-firefox/\n//\n(function () {\n  \"use strict\";\n\n  require('remedial');\n  require('bufferjs');\n  var EventEmitter = require('events').EventEmitter,\n    forEachAsync = require('foreachasync').forEachAsync,\n    File = require('File'),\n    FileReader = require('filereader');\n  function isFile(o) {\n    return o instanceof File || o.name && (o.path || o.stream || o.buffer);\n  }\n  function FormData() {\n    var self = this,\n      first = true,\n      fields = {};\n    self.nodeChunkedEncoding = false;\n    self.setNodeChunkedEncoding = function (val) {\n      self.nodeChunkedEncoding = val;\n    };\n    self.getContentType = function () {\n      return self.type;\n    };\n    self.append = function (key, val) {\n      var field = fields[key] = fields[key] || [],\n        err;\n      if (field.length > 0 && '[]' !== key.substr(key.length - 2)) {\n        err = new Error(\"Overwriting '\" + key + \"'. Use '\" + key + \"[] if you intend this to be treated as an array' \");\n        console.log(err.message);\n        field.pop();\n      }\n      field.push(val);\n      return err;\n    };\n    function toJSON() {\n      /*\n        files.forEach(function (file) {\n          var fr = new FileReader();\n          fr.addEventListener('load', join.deliverer());\n          fr.readAsText('base64');\n        });\n      */\n    }\n    function toContentDisposition(key, val) {\n      var emitter = new EventEmitter(),\n        text = '',\n        fr;\n      if (first) {\n        first = false;\n      } else {\n        text += '\\r\\n';\n      }\n      text += '--' + self.boundary;\n      text += \"\\r\\nContent-Disposition: form-data; name=\" + key.quote();\n      if (!isFile(val)) {\n        if ('string' !== typeof val) {\n          val = JSON.stringify(val);\n        }\n        process.nextTick(function () {\n          emitter.emit('data', new Buffer(text + \"\\r\\n\\r\\n\" + val));\n          emitter.emit('end');\n        });\n      } else {\n        fr = new FileReader();\n        fr.on('loadstart', function () {\n          text += '; filename=\"' + val.name + '\"';\n          text += \"\\r\\nContent-Type: \" + (val.type || 'application/binary') + \"\\r\\n\\r\\n\";\n          emitter.emit('data', new Buffer(text));\n        });\n        fr.on('data', function (data) {\n          emitter.emit('data', data);\n        });\n        fr.on('loadend', function () {\n          emitter.emit('end');\n        });\n        fr.setNodeChunkedEncoding(self.nodeChunkedEncoding);\n        fr.readAsArrayBuffer(val);\n      }\n      return emitter;\n    }\n    function toFormData() {\n      var emitter = new EventEmitter(),\n        buffers = [];\n      emitter.on('data', function (data) {\n        buffers.push(data);\n      });\n      forEachAsync(Object.keys(fields), function (next, key) {\n        forEachAsync(fields[key], function (next2, item) {\n          var stream = toContentDisposition(key, item);\n          stream.on('data', function (data) {\n            emitter.emit('data', data);\n          });\n          stream.on('end', next2);\n        }).then(next);\n      }).then(function () {\n        var footer = new Buffer(\"\\r\\n--\" + self.boundary + \"--\\r\\n\");\n        emitter.emit('data', footer);\n        emitter.emit('ready');\n      });\n      emitter.on('ready', function () {\n        var data = Buffer.concat(buffers);\n        // TODO\n        // determine the size as quickly as possible\n        // so that the data can still be streamed, even\n        // if the content-length must be known\n        //\n        // This will only take a significant amount of time\n        // if one of the `File`s is stream-backed. Waiting\n        // for the stream's `end` will hold-up the content-length\n        // calculation.\n        emitter.emit('size', data.length);\n        emitter.emit('load', data);\n        emitter.emit('end');\n      });\n      return emitter;\n    }\n    function toFormUrlEncoded() {}\n    function randomString(len, charset) {\n      var numbers = \"0123456789\",\n        ualpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n        lalpha = \"abcdefghijklmnopqrstuvwxyz\",\n        special = \"+/-_:\",\n        radix = {\n          base16: numbers + ualpha.substr(0, 6),\n          base36: numbers + ualpha,\n          base64: ualpha + lalpha + numbers + special.substr(0, 2),\n          base64url: ualpha + lalpha + numbers + special.substr(2, 2),\n          base64xml: ualpha + lalpha + numbers + special.substr(3, 2)\n        },\n        result = '',\n        chars,\n        length,\n        seed,\n        i;\n      length = len || 8;\n      chars = radix[charset] || charset || radix.base64url;\n      for (i = 0; i < length; i += 1) {\n        seed = Math.floor(Math.random() * chars.length);\n        result += chars.substring(seed, seed + 1);\n      }\n      return result;\n    }\n    self.serialize = function (intendedType) {\n      self.type = intendedType = (intendedType || '').toLowerCase();\n      if ('multipart/form-data' !== self.type) {\n        Object.keys(fields).forEach(function (key) {\n          // TODO traverse entire tree\n          fields[key].forEach(function (item) {\n            if (isFile(item)) {\n              self.type = 'multipart/form-data';\n            }\n          });\n        });\n        if ('multipart/form-data' === self.type) {\n          console.log(\"ContentType changed `multipart/form-data`: Some of the upload items are `HTML5::FileAPI::File`s.\");\n        }\n\n        // This is how FireFox does it. Seems good enough to me.\n        // Note that the spec also allows a space in the middle, but not at the end\n        // http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\n        //self.boundary = \"---------------------------5414130496409022042012852923\";\n        self.boundary = '---------------------------' + randomString(28, 'base64url', \"'()+_,-./:=?\");\n        self.type += '; boundary=' + self.boundary;\n        return toFormData();\n      }\n      if (!self.type || 'application/x-www-form-urlencoded' === self.type.toLowerCase()) {\n        self.type = 'application/x-www-form-urlencoded';\n        return toFormUrlEncoded();\n      }\n      if ('application/json' === self.type.toLowerCase()) {\n        return toJSON();\n      }\n    };\n  }\n  module.exports = FormData;\n})();","map":{"version":3,"names":["require","EventEmitter","forEachAsync","File","FileReader","isFile","o","name","path","stream","buffer","FormData","self","first","fields","nodeChunkedEncoding","setNodeChunkedEncoding","val","getContentType","type","append","key","field","err","length","substr","Error","console","log","message","pop","push","toJSON","toContentDisposition","emitter","text","fr","boundary","quote","JSON","stringify","process","nextTick","emit","Buffer","on","data","readAsArrayBuffer","toFormData","buffers","Object","keys","next","next2","item","then","footer","concat","toFormUrlEncoded","randomString","len","charset","numbers","ualpha","lalpha","special","radix","base16","base36","base64","base64url","base64xml","result","chars","seed","i","Math","floor","random","substring","serialize","intendedType","toLowerCase","forEach","module","exports"],"sources":["C:/Users/maany/OneDrive/Desktop/myBlog/my-blog/node_modules/formdata/FormData.js"],"sourcesContent":["/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/\n//\n// FormData\n//\n// http://hacks.mozilla.org/2010/05/formdata-interface-coming-to-firefox/\n//\n(function () {\n  \"use strict\";\n\n  require('remedial');\n  require('bufferjs');\n\n  var EventEmitter = require('events').EventEmitter\n    , forEachAsync = require('foreachasync').forEachAsync\n    , File = require('File')\n    , FileReader = require('filereader')\n    ;\n\n  function isFile(o) {\n    return (o instanceof File) ||\n      (o.name && (o.path || o.stream || o.buffer));\n  }\n\n  function FormData() {\n    var self = this\n      , first = true\n      , fields = {}\n      ;\n\n    self.nodeChunkedEncoding = false;\n\n    self.setNodeChunkedEncoding = function (val) {\n      self.nodeChunkedEncoding = val;\n    };\n\n    self.getContentType = function () {\n      return self.type;\n    };\n\n    self.append = function (key, val) {\n      var field = fields[key] = fields[key] || [],\n        err;\n      \n      if (field.length > 0 && '[]' !== key.substr(key.length - 2)) {\n        err = new Error(\"Overwriting '\" + key + \"'. Use '\" + key  + \"[] if you intend this to be treated as an array' \");\n        console.log(err.message);\n        field.pop();\n      }\n\n      field.push(val);\n      return err;\n    };\n\n    function toJSON() {\n      /*\n        files.forEach(function (file) {\n          var fr = new FileReader();\n          fr.addEventListener('load', join.deliverer());\n          fr.readAsText('base64');\n        });\n      */\n    }\n\n    function toContentDisposition(key, val) {\n      var emitter = new EventEmitter(),\n        text = '',\n        fr;\n\n      if (first) {\n        first = false;\n      } else {\n        text += '\\r\\n';\n      }\n      text += '--' + self.boundary;\n      text += \"\\r\\nContent-Disposition: form-data; name=\" + key.quote();\n\n      if (!isFile(val)) {\n        if ('string' !== typeof val) {\n          val = JSON.stringify(val);\n        }\n        process.nextTick(function () {\n          emitter.emit('data', new Buffer(text + \"\\r\\n\\r\\n\" + val));\n          emitter.emit('end');\n        });\n      } else {\n        fr = new FileReader();\n        fr.on('loadstart', function () {\n          text += '; filename=\"' + val.name + '\"';\n          text += \"\\r\\nContent-Type: \" + (val.type || 'application/binary') + \"\\r\\n\\r\\n\";\n          emitter.emit('data', new Buffer(text));\n        });\n        fr.on('data', function (data) {\n          emitter.emit('data', data);\n        });\n        fr.on('loadend', function () {\n          emitter.emit('end');\n        });\n        fr.setNodeChunkedEncoding(self.nodeChunkedEncoding);\n        fr.readAsArrayBuffer(val);\n      }\n      return emitter;\n    }\n\n    function toFormData() {\n      var emitter = new EventEmitter(),\n        buffers = [];\n\n      emitter.on('data', function (data) {\n        buffers.push(data);\n      });\n\n      forEachAsync(Object.keys(fields), function (next, key) {\n        forEachAsync(fields[key], function (next2, item) {\n          var stream = toContentDisposition(key, item);\n          stream.on('data', function (data) {\n            emitter.emit('data', data);\n          });\n          stream.on('end', next2);\n        })\n        .then(next);\n      })\n      .then(function () {\n        var footer = new Buffer(\"\\r\\n--\" + self.boundary + \"--\\r\\n\");\n        emitter.emit('data', footer);\n        emitter.emit('ready');\n      });\n\n      emitter.on('ready', function () {\n        var data = Buffer.concat(buffers);\n        // TODO\n        // determine the size as quickly as possible\n        // so that the data can still be streamed, even\n        // if the content-length must be known\n        //\n        // This will only take a significant amount of time\n        // if one of the `File`s is stream-backed. Waiting\n        // for the stream's `end` will hold-up the content-length\n        // calculation.\n        emitter.emit('size', data.length);\n        emitter.emit('load', data);\n        emitter.emit('end');\n      });\n\n      return emitter;\n    }\n\n    function toFormUrlEncoded() {\n    }\n\n    function randomString(len, charset) {\n      var numbers = \"0123456789\",\n        ualpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n        lalpha = \"abcdefghijklmnopqrstuvwxyz\",\n        special = \"+/-_:\",\n        radix = {\n          base16: numbers + ualpha.substr(0, 6),\n          base36: numbers + ualpha,\n          base64: ualpha + lalpha + numbers + special.substr(0,2),\n          base64url: ualpha + lalpha + numbers + special.substr(2,2),\n          base64xml: ualpha + lalpha + numbers + special.substr(3,2)\n        },\n        result = '',\n        chars,\n        length,\n        seed,\n        i;\n\n      length = len || 8;\n      chars = radix[charset] || charset || radix.base64url;\n\n      for (i = 0; i < length; i +=1) {\n        seed = Math.floor(Math.random() * chars.length);\n        result += chars.substring(seed, seed + 1);\n      }\n\n      return result;\n    }\n\n\n    self.serialize = function (intendedType) {\n      self.type = intendedType = (intendedType || '').toLowerCase();\n\n      if ('multipart/form-data' !== self.type) {\n        Object.keys(fields).forEach(function (key) {\n          // TODO traverse entire tree\n          fields[key].forEach(function (item) {\n            if (isFile(item)) {\n              self.type = 'multipart/form-data';\n            }\n          });\n        });\n\n        if ('multipart/form-data' === self.type) {\n          console.log(\"ContentType changed `multipart/form-data`: Some of the upload items are `HTML5::FileAPI::File`s.\");\n        }\n\n\n        // This is how FireFox does it. Seems good enough to me.\n        // Note that the spec also allows a space in the middle, but not at the end\n        // http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\n        //self.boundary = \"---------------------------5414130496409022042012852923\";\n        self.boundary = '---------------------------' + randomString(28, 'base64url', \"'()+_,-./:=?\");\n        self.type += '; boundary=' + self.boundary;\n\n        return toFormData();\n      }\n\n      if (!self.type || 'application/x-www-form-urlencoded' === self.type.toLowerCase()) {\n        self.type = 'application/x-www-form-urlencoded';\n        return toFormUrlEncoded();\n      }\n\n      if ('application/json' === self.type.toLowerCase()) {\n        return toJSON();\n      }\n    };\n  }\n\n  module.exports = FormData;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}