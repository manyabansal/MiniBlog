[{"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\index.js":"1","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\App.js":"2","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\page-renderer.js":"4","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\user-context.js":"5","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\edit-post.js":"6","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\post-page.js":"7","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\UserPosts.js":"8","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\home.js":"9","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\navigation.js":"10","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\search.js":"11","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\create-post.js":"12","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\sign-up.js":"13","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\tag-row.js":"14","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\login.js":"15","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\post-masonry.js":"16","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\post-grid.js":"17","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\masonry-post.js":"18","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\user-post.js":"19"},{"size":260,"mtime":1697711816739,"results":"20","hashOfConfig":"21"},{"size":1011,"mtime":1697651463218,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1687343328214,"results":"23","hashOfConfig":"21"},{"size":470,"mtime":1687369073775,"results":"24","hashOfConfig":"21"},{"size":347,"mtime":1688291501334,"results":"25","hashOfConfig":"21"},{"size":4125,"mtime":1697710276646,"results":"26","hashOfConfig":"21"},{"size":3798,"mtime":1700750830846,"results":"27","hashOfConfig":"21"},{"size":1358,"mtime":1697710276631,"results":"28","hashOfConfig":"21"},{"size":3025,"mtime":1697712759690,"results":"29","hashOfConfig":"21"},{"size":4723,"mtime":1697710276646,"results":"30","hashOfConfig":"21"},{"size":2015,"mtime":1697710276637,"results":"31","hashOfConfig":"21"},{"size":3561,"mtime":1700486700168,"results":"32","hashOfConfig":"21"},{"size":2195,"mtime":1697710276630,"results":"33","hashOfConfig":"21"},{"size":846,"mtime":1688755364310,"results":"34","hashOfConfig":"21"},{"size":2712,"mtime":1697710276628,"results":"35","hashOfConfig":"21"},{"size":469,"mtime":1697700193896,"results":"36","hashOfConfig":"21"},{"size":2044,"mtime":1700750787541,"results":"37","hashOfConfig":"21"},{"size":1080,"mtime":1700750816827,"results":"38","hashOfConfig":"21"},{"size":1127,"mtime":1700750804120,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cd9d8v",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\index.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\App.js",["104"],[],"import React from \"react\";\nimport Navigation from \"./components/navigation\";\nimport {BrowserRouter as Router, Routes, Route, Navigate} from 'react-router-dom';\nimport PageRenderer from \"./page-renderer\";\nimport PostPage from \"./pages/post-page.js\"\nimport UserPosts from \"./pages/UserPosts\";\nimport EditPost from \"./pages/edit-post.js\"\nimport Home from \"./pages/home\";\nimport './pages/home';\nimport './pages/UserPosts';\nimport { UserContextProvider } from \"./user-context\";\nfunction App() {\n  return (\n    <UserContextProvider>\n    <Router>\n    <div className=\"App\">\n      <Navigation/>\n      <Routes>\n      <Route path=\"/:page\" element={<PageRenderer />} />\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/post/:id\" element={<PostPage />}/>\n        <Route path=\"/posts/:id\" element={<UserPosts />}/>\n        <Route path=\"/edit/:id\" element={<EditPost />} />\n        <Route component={()=>404}/>\n      </Routes>\n    </div>\n    </Router>\n    </UserContextProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\page-renderer.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\user-context.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\edit-post.js",["105"],[],"import ReactQuill from \"react-quill\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./css/create-post.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Navigate, useParams } from \"react-router\";\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n\r\nconst formats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nexport default function CreatePost() {\r\n    const {id} = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [files, setFiles] = useState(\"\");\r\n  const [category1, setCategory1]= useState(\"\");\r\n  const [category2, setCategory2]= useState(\"\");\r\n  const [redirect, setRedirect]= useState(false);\r\n  \r\n  useEffect(()=>{\r\n    fetch(`/api/post/${id}`,{\r\n        credentials: \"include\",\r\n    }).then(res=>{\r\n        res.json().then(postInfo=>{\r\n            console.log(postInfo);\r\n            setTitle(postInfo.title)\r\n            setContent(postInfo.content)\r\n            setSummary(postInfo.summary);\r\n            setCategory1(postInfo.categories[0].name)\r\n            setCategory2(postInfo.categories[1].name)\r\n            // setFiles(postInfo.files);\r\n        })\r\n    })\r\n  },[])\r\n  async function updatePost(ev){\r\n    ev.preventDefault();\r\n     const data= new FormData();\r\n     data.set(\"title\", title);\r\n    data.set(\"summary\", summary);\r\n    data.set(\"content\", content);\r\n    data.set(\"file\", files?.[0]);\r\n    data.set(\"category1\", category1);\r\n    data.set(\"category2\", category2);\r\n    data.set('id',id)\r\n   \r\n   const response = await fetch('/api/post', {\r\n        method: 'PUT',\r\n        body: data,\r\n        credentials: \"include\",\r\n    })\r\n    if(response.ok){\r\n              setRedirect(true);\r\n        }\r\n  }\r\n\r\n  if(redirect){\r\n    return <Navigate to={`/post/${id}`} />\r\n  }\r\n  return (\r\n    <form onSubmit={updatePost}>\r\n      <div className=\"form-group\">\r\n        <label className=\"top\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          placeholder={\"Title\"}\r\n          value={title}\r\n          onChange={(event) => setTitle(event.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Summary</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"summary\"\r\n          placeholder={\"Summary\"}\r\n          name=\"summary\"\r\n          value={summary}\r\n          maxLength={400}\r\n          onChange={(event) => setSummary(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>File</label>\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"file\"\r\n          type=\"file\"\r\n          onChange={(ev) => {setFiles(ev.target.files)}}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label>Categories</label>\r\n          <div className=\"d-flex\">\r\n          <input className=\"form-control category\"\r\n          name=\"category1\"\r\n          type=\"text\"\r\n          value={category1}\r\n          onChange={(event) => setCategory1(event.target.value)}\r\n           />\r\n           <input className=\"form-control category\"\r\n          name=\"category2\"\r\n          type=\"text\" \r\n          value={category2}\r\n          onChange={(event) => setCategory2(event.target.value)}\r\n           />\r\n           </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Content</label>\r\n        <ReactQuill\r\n          value={content}\r\n          modules={modules}\r\n          formats={formats}\r\n          onChange={(newValue) => setContent(newValue)}\r\n        />\r\n      </div>\r\n     \r\n      <button type=\"submit\" className=\"btn btn-dark\">\r\n        Edit Post\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\post-page.js",["106","107"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { UserContext } from \"../user-context\";\r\nimport { Navigate } from \"react-router\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/post-page.css\";\r\nimport TagRow from \"../components/tag-row\";\r\n\r\nexport default function PostPage() {\r\n  const { id } = useParams();\r\n  const [postInfo, setPostInfo] = useState(null);\r\n  const {userInfo}= useContext(UserContext);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const [heartClass, setHeartClass] = useState(\"fa-regular\");\r\n  const [isLiked, setIsLiked]= useState(false);\r\n\r\n  const [user, setUser]= useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const userResponse = await fetch(`/api/profile`, {\r\n          method: 'GET',\r\n          credentials: \"include\",\r\n        });\r\n        const userData = await userResponse.json();\r\n        setUser(userData);\r\n        \r\n        const postResponse = await fetch(`/api/post/${id}`);\r\n        const postInfoData = await postResponse.json();\r\n        setPostInfo(postInfoData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  \r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if (postInfo && user) {\r\n    const isUserLiked = postInfo.likes.includes(user.id);\r\n    console.log(isUserLiked);\r\n    setIsLiked(isUserLiked);\r\n    setHeartClass(`${isUserLiked}? fa-solid: fa-regular`);\r\n    }\r\n  }, [postInfo, user]);\r\n  \r\n\r\n  async function deletePost(){\r\n    const response = await fetch(`/api/post/${id}`,{\r\n      method: \"DELETE\"\r\n    }).catch(err=>console.log(err));\r\n\r\n    if(response.ok){\r\n      setRedirect(true);\r\n    }\r\n  }\r\n  \r\n  async function setLike(){\r\n    try{\r\n      if(isLiked){\r\n        await fetch(`/api/post/${id}?set=removeLike`,{\r\n          method: \"PATCH\",\r\n          credentials: \"include\",\r\n        }).catch(err=>console.log(err));\r\n        setHeartClass('fa-regular');\r\n      }\r\n      else{\r\n        await fetch(`/api/post/${id}?set=addLike`,{\r\n          method: \"PATCH\",\r\n          credentials: \"include\",\r\n        }).catch(err=>console.log(err));\r\n        setHeartClass('fa-solid');\r\n      }\r\n    } catch(err){\r\n      console.log(err);\r\n    }\r\n    \r\n  }\r\n\r\n  if(redirect){\r\n    return <Navigate to={`/posts/${userInfo.id}`} />\r\n  }\r\n\r\n  if (!postInfo) return \"\";\r\n  return (\r\n    <div className=\"post-page\">\r\n      <div className=\"post-page-image\">\r\n        <img\r\n          src={`${`https://miniblog-cxzz.onrender.com/${postInfo.image}`}`}\r\n        />\r\n      </div>\r\n      <h1>{postInfo.title}</h1>\r\n      <p className=\"author-text\">\r\n        <span className=\"post-date\">{postInfo.date}</span>\r\n        <span className=\"post-author\">\r\n          By: @\r\n          <a href={`/posts/${postInfo.author._id}`}>\r\n            {postInfo.author.username}\r\n          </a>\r\n        </span>\r\n      </p>\r\n      <span className=\"tags\">\r\n        <TagRow tags={postInfo.categories} />\r\n      </span>\r\n      <span className=\"like d-flex justify-content-center\"\r\n      onMouseEnter={()=>setHeartClass(\"fa-solid\")}\r\n      onMouseLeave={()=>{!isLiked && setHeartClass(\"fa-regular\")}}\r\n      onClick={()=>{\r\n        setIsLiked(!isLiked);\r\n        setLike();\r\n    }}>\r\n      <i class={`${heartClass} fa-heart`} />\r\n      <p>Like</p>\r\n      </span>\r\n      <div\r\n        className=\" post-content\"\r\n        dangerouslySetInnerHTML={{ __html: postInfo.content }}\r\n      />\r\n      <div className={`buttons  ${userInfo.id!==postInfo.author._id && \"d-none\"}`}>\r\n       <Link to={`/edit/${id}`}> <button className=\"edit btn btn-dark\">Edit</button></Link>\r\n        <button className=\" btn btn-dark\" onClick={deletePost}>Delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\UserPosts.js",["108"],[],"import React,  {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport UserPost from '../components/user-post';\r\nimport './css/user-posts.css'\r\nfunction UserPosts(){\r\n    const {id} = useParams();\r\n    const [posts, setPosts]=useState([]);\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [author, setAuthor]= useState({});\r\n  useEffect(() => {\r\n   \r\n    fetch(`/api/posts/${id}`, {\r\n      credentials: \"include\",\r\n    }).then((res) => {\r\n      res.json().then((posts) => {\r\n      setPosts(posts);\r\n      });\r\n    });\r\n\r\n    fetch(\"/api/profile\", {\r\n      credentials: \"include\",\r\n    }).then((res) => {\r\n      res.json().then((userInfo) => {\r\n      setUserInfo(userInfo);\r\n     console.log(userInfo.username)\r\n      });\r\n    })\r\n\r\n    fetch(`/api/user/${id}`).then(response =>{\r\n      response.json().then(authorInfo=>{\r\n        setAuthor(authorInfo);\r\n      })\r\n    });\r\n  }, []);\r\n\r\n    return (\r\n   <div className='container'>\r\n     <div>\r\n      <h1 className='heading'>{id===userInfo.id? 'My Posts' : `Posts by ${author.username}`}</h1>\r\n      <hr></hr>\r\n     </div>\r\n     {posts.map((post, index)=>{\r\n        return(\r\n          <>\r\n         <UserPost key={index} post={post} />\r\n         </>\r\n        );\r\n     })}\r\n   </div>\r\n    );\r\n}\r\n\r\nexport default UserPosts;","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\home.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\navigation.js",["109","110"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/navigation.css\";\r\nimport { Avatar } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../user-context\";\r\n\r\nconst navLinks = [\r\n  {\r\n    title: \"Home\",\r\n    path: \"/home\",\r\n  },\r\n  {\r\n    title: \"My posts\",\r\n    path: \"\",\r\n  },\r\n  {\r\n    title: \"Search\",\r\n    path: \"/search\",\r\n  },\r\n  {\r\n    title: \"Create new post\",\r\n    path: \"\"\r\n  }\r\n];\r\n\r\nfunction Navigation() {\r\n  const navigate = useNavigate();\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  const {userInfo, setUserInfo}=useContext(UserContext);\r\n  useEffect(() => {\r\n   \r\n    fetch(\"/api/profile\", {\r\n      credentials: \"include\",\r\n    }).then((res) => {\r\n      res.json().then(async (userInfo) => {\r\n       setUserInfo(userInfo);\r\n     \r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function logout() {\r\n    fetch(\"/api/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n    }).then(()=>{\r\n      setUserInfo(null);\r\n      navigate(\"/login\");\r\n    });\r\n    \r\n    navLinks[3].path = \"/login\";\r\n  }\r\n\r\n  const username= userInfo?.username;\r\n\r\n  navLinks[1].path=`/posts/${userInfo?.id}`;\r\n  navLinks[3].path = userInfo?.username ? \"/create-post\" : \"/login\";\r\n  return (\r\n    <div className=\"navigation-bar\">\r\n      <div className=\"container\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light d-flex py-3\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            MiniBlog\r\n          </a>\r\n\r\n          <div className={`navbar-collapse d-flex ${menuActive && \"active\"}`}>\r\n            <div className=\"nav navbar-nav\">\r\n              {navLinks.map((link, index) => {\r\n                return (\r\n                  <a key={index} className={`nav-item nav-link ${(!userInfo?.username && index===1) && `d-none`}`} href={link.path}>\r\n                    {link.title}\r\n                  </a>\r\n                );\r\n              })}\r\n              <div className=\"d-lg-none\">\r\n                {!username && (\r\n                  <>\r\n                    <a className={`nav-item nav-link`} href=\"/login\">\r\n                      Login\r\n                    </a>\r\n                    <a className={`nav-item nav-link`} href=\"/sign-up\">\r\n                      Sign Up\r\n                    </a>\r\n                  </>\r\n                )}\r\n                {username && (\r\n                \r\n                  <button\r\n                    className={`nav-item nav-link`}\r\n                    onClick={logout}\r\n                  >\r\n                    Log Out\r\n                  </button>\r\n                 \r\n                )}\r\n              </div>\r\n            </div>\r\n          \r\n          {!username && (\r\n              <div\r\n              className={`buttons navbar-nav d-none align-items-center\r\n               d-lg-block d-lg-flex\r\n              `}\r\n            >\r\n              <a className=\" button nav-item nav-link me-2\" href=\"/login\">\r\n                <button type=\"button\" className=\"btn btn-outline-dark\">\r\n                  Login\r\n                </button>\r\n              </a>\r\n              <a className=\"button nav-item nav-link \" href=\"/sign-up\">\r\n                {\" \"}\r\n                <button type=\"button\" className=\"btn btn-dark\">\r\n                  Sign Up\r\n                </button>{\" \"}\r\n              </a>\r\n            </div>\r\n          )}\r\n          \r\n          {username && (\r\n             <div class=\"dropdown\">\r\n             <button\r\n               class=\"dropdown-toggle\"\r\n               type=\"button\"\r\n               id=\"dropdownMenuButton\"\r\n               data-toggle=\"dropdown\"\r\n               aria-haspopup=\"true\"\r\n               aria-expanded=\"false\"\r\n             >\r\n               <span\r\n                 className={`avatar-span d-flex align-items-center nav-item`}\r\n               >\r\n                 <Avatar\r\n                   className=\" me-2\"\r\n                   style={{ backgroundColor: \"#fde3cf\", color: \"#f56a00\" }}\r\n                 >\r\n                  {`${username}`.slice(0,1).toLocaleUpperCase()}\r\n                 </Avatar>\r\n                 <span className=\"avatar-name\">{`${username}`}</span>\r\n               </span>\r\n             </button>\r\n             <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n               <a class=\"dropdown-item\" onClick={logout}>\r\n                 Logout\r\n               </a>\r\n             </div>\r\n           </div>\r\n          )}\r\n           \r\n          </div>\r\n          <span\r\n            className=\"navbar-toggler-icon d-lg-none\"\r\n            onClick={() => setMenuActive(!menuActive)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\search.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\create-post.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\sign-up.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\tag-row.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\pages\\login.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\post-masonry.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\post-grid.js",["111","112"],[],"import React, { useMemo } from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport TagRow from \"./tag-row\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/post-grid.css\";\r\n\r\nexport default function PostGrid({\r\n  posts,\r\n  current,\r\n  setCurrent,\r\n  setPaginationChanged,\r\n}) {\r\n  const onChange = (page) => {\r\n    setCurrent(page);  \r\n    setPaginationChanged(true);\r\n    \r\n  };\r\n\r\n  const pageSize = 10;\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize;\r\n    const firstIndex = lastIndex - pageSize;\r\n   \r\n    return posts.slice(firstIndex, lastIndex);\r\n  }, [current]);\r\n  async function addClick(post) {\r\n    await fetch(`/api/post/${post._id}?set=click`, {\r\n      method: \"PATCH\",\r\n      credentials: \"include\",\r\n    });\r\n  }\r\n  return (\r\n    <section className=\"pagination-container\">\r\n      <section className=\"post-grid container\">\r\n        {paginatedPosts.map((post, index) => {\r\n         \r\n          return (\r\n            <div key={index} className=\"post-container\">\r\n              <a href={`/post/${post._id}`}  onClick={()=>addClick(post)}>\r\n              <figure className=\"post-image\">\r\n                \r\n                 \r\n                  <img\r\n                    src={`https://miniblog-cxzz.onrender.com/${post.image}`}\r\n                    alt={post.image}\r\n                  />\r\n                 \r\n              \r\n              </figure>\r\n              </a>\r\n              <TagRow tags={post.categories} />\r\n              <h2>{post.title}</h2>\r\n              <p className=\"author-text\">\r\n                <span>\r\n                  By:\r\n                  <a href={`/posts/${post.author._id}`}>{post.author.username}</a>\r\n                </span>\r\n                <span className=\"post-date\">- {post.date}</span>\r\n              </p>\r\n            </div>\r\n          );\r\n        })}\r\n      </section>\r\n      <Pagination\r\n        className=\"paginationItem\"\r\n        defaultCurrent={current}\r\n        onChange={onChange}\r\n        total={posts.length}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\masonry-post.js",[],[],"C:\\Users\\maany\\OneDrive\\Desktop\\myBlog\\my-blog\\frontend\\src\\components\\user-post.js",["113"],[],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/user-post.css\";\r\nimport { useNavigate } from \"react-router\";\r\nimport TagRow from \"./tag-row\";\r\n\r\n\r\nexport default function UserPost({ post}) {\r\n  const navigate= useNavigate();\r\n\r\n  const postPageRender = () => {\r\n\r\n    navigate(`/post/${post._id}`);\r\n  };\r\n\r\n  async function AuthorPage(){\r\n    navigate(`/posts/${post.author._id}`);\r\n  }\r\n  return (\r\n    \r\n    <div className=\"post-box\">\r\n      <div\r\n        onClick={postPageRender}\r\n        className={`post-image`}\r\n      >\r\n        <img\r\n          src={`${`https://miniblog-cxzz.onrender.com/${post.image}`}`}\r\n          alt=\"Post Image\"\r\n        />\r\n        \r\n      </div>\r\n      <div className={`post-text`}>\r\n        <div>\r\n          <h2 onClick={postPageRender}>{post.title}</h2>\r\n          <span className=\"author-text\" onClick={AuthorPage}>{post.author.username}</span>\r\n          <span>{post.date}</span>\r\n          <span className=\"post-tags\"><TagRow tags={post.categories}/></span>\r\n        </div>\r\n         \r\n        <p>{post.summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"114","severity":1,"message":"115","line":3,"column":49,"nodeType":"116","messageId":"117","endLine":3,"endColumn":57},{"ruleId":"118","severity":1,"message":"119","line":61,"column":5,"nodeType":"120","endLine":61,"endColumn":7,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"119","line":39,"column":6,"nodeType":"120","endLine":39,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":91,"column":9,"nodeType":"125","endLine":93,"endColumn":11},{"ruleId":"118","severity":1,"message":"119","line":35,"column":6,"nodeType":"120","endLine":35,"endColumn":8,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"127","line":41,"column":6,"nodeType":"120","endLine":41,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":143,"column":16,"nodeType":"125","endLine":143,"endColumn":58},{"ruleId":"114","severity":1,"message":"131","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"132","line":25,"column":6,"nodeType":"120","endLine":25,"endColumn":15,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":26,"column":9,"nodeType":"125","endLine":29,"endColumn":11},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["136"],["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["138"],"React Hook useEffect has a missing dependency: 'setUserInfo'. Either include it or remove the dependency array.",["139"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","React Hook useMemo has a missing dependency: 'posts'. Either include it or remove the dependency array.",["140"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"141","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [id]",{"range":"149","text":"150"},{"range":"151","text":"150"},{"range":"152","text":"150"},"Update the dependencies array to be: [setUserInfo]",{"range":"153","text":"154"},"Update the dependencies array to be: [current, posts]",{"range":"155","text":"156"},[1610,1612],"[id]",[1280,1282],[966,968],[901,903],"[setUserInfo]",[606,615],"[current, posts]"]